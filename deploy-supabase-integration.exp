#!/usr/bin/expect -f

# BettaDayz PBBG Supabase Integration Deployment
# Uploads Supabase client and authentication code to production server

set timeout 120
set password "@Jgallow20"

puts "📊 BettaDayz PBBG Supabase Integration Deployment"
puts "================================================="
puts "🔐 JWT Secret: 9=N6H//qQ]?g+BDV"
puts "📁 Uploading Supabase integration files..."
puts ""

# Upload Supabase integration files
spawn scp -P 65002 lib/supabase.ts hooks/usePlayer.ts u933155252@194.195.84.72:~/bettadayz/

expect {
    "password:" {
        send "$password\r"
        exp_continue
    }
    "Password:" {
        send "$password\r"
        exp_continue
    }
    "100%" {
        puts "✅ Supabase files uploaded"
    }
    timeout {
        puts "Upload timeout"
        exit 1
    }
}

expect eof

# Connect to server to integrate files
spawn ssh -p 65002 u933155252@194.195.84.72

expect {
    "password:" {
        send "$password\r"
        exp_continue
    }
    "Password:" {
        send "$password\r"
        exp_continue
    }
    "\$ " {
        # Connected
    }
    timeout {
        puts "Connection timeout"
        exit 1
    }
}

send "cd ~/bettadayz\r"
expect "\$ "

# Create lib directory if it doesn't exist
send "mkdir -p lib hooks\r"
expect "\$ "

# Move uploaded files to correct locations
send "mv supabase.ts lib/ 2>/dev/null || echo 'supabase.ts already in place'\r"
expect "\$ "

send "mv usePlayer.ts hooks/ 2>/dev/null || echo 'usePlayer.ts already in place'\r"
expect "\$ "

# Verify files are in place
send "ls -la lib/supabase.ts hooks/usePlayer.ts\r"
expect "\$ "

# Create a basic game page that uses Supabase
send "mkdir -p app/game\r"
expect "\$ "

send "cat > app/game/page.tsx << 'EOF'\r"
expect "> "
send "'use client'\r"
expect "> "
send "\r"
expect "> "
send "import { usePlayer } from '@/hooks/usePlayer'\r"
expect "> "
send "import { useEffect } from 'react'\r"
expect "> "
send "\r"
expect "> "
send "export default function GamePage() {\r"
expect "> "
send "  const {\r"
expect "> "
send "    user,\r"
expect "> "
send "    player,\r"
expect "> "
send "    loading,\r"
expect "> "
send "    signIn,\r"
expect "> "
send "    signUp,\r"
expect "> "
send "    signOut,\r"
expect "> "
send "    logActivity\r"
expect "> "
send "  } = usePlayer()\r"
expect "> "
send "\r"
expect "> "
send "  useEffect(() => {\r"
expect "> "
send "    if (player) {\r"
expect "> "
send "      logActivity('page_visit', { page: 'game' }, 10)\r"
expect "> "
send "    }\r"
expect "> "
send "  }, \[player, logActivity\])\r"
expect "> "
send "\r"
expect "> "
send "  if (loading) {\r"
expect "> "
send "    return (\r"
expect "> "
send "      <div className=\"flex min-h-screen items-center justify-center\">\r"
expect "> "
send "        <div className=\"text-center\">\r"
expect "> "
send "          <h1 className=\"text-2xl font-bold mb-4\">🎮 BettaDayz PBBG</h1>\r"
expect "> "
send "          <p>Loading game...</p>\r"
expect "> "
send "        </div>\r"
expect "> "
send "      </div>\r"
expect "> "
send "    )\r"
expect "> "
send "  }\r"
expect "> "
send "\r"
expect "> "
send "  if (!user) {\r"
expect "> "
send "    return (\r"
expect "> "
send "      <div className=\"flex min-h-screen items-center justify-center bg-gradient-to-b from-blue-900 to-purple-900\">\r"
expect "> "
send "        <div className=\"bg-white rounded-lg p-8 shadow-xl max-w-md w-full\">\r"
expect "> "
send "          <h1 className=\"text-3xl font-bold text-center mb-6 text-gray-800\">\r"
expect "> "
send "            🎮 BettaDayz PBBG\r"
expect "> "
send "          </h1>\r"
expect "> "
send "          <p className=\"text-center text-gray-600 mb-8\">\r"
expect "> "
send "            Welcome to the ultimate persistent browser-based gaming experience!\r"
expect "> "
send "          </p>\r"
expect "> "
send "          <div className=\"space-y-4\">\r"
expect "> "
send "            <button\r"
expect "> "
send "              onClick={() => signIn('demo@bettadayz.com', 'demo123')}\r"
expect "> "
send "              className=\"w-full bg-blue-600 text-white py-3 rounded-lg hover:bg-blue-700 transition-colors\"\r"
expect "> "
send "            >\r"
expect "> "
send "              Demo Login\r"
expect "> "
send "            </button>\r"
expect "> "
send "            <div className=\"text-center text-sm text-gray-500\">\r"
expect "> "
send "              🔐 JWT: 9=N6H//qQ\]?g+BDV\r"
expect "> "
send "            </div>\r"
expect "> "
send "          </div>\r"
expect "> "
send "        </div>\r"
expect "> "
send "      </div>\r"
expect "> "
send "    )\r"
expect "> "
send "  }\r"
expect "> "
send "\r"
expect "> "
send "  return (\r"
expect "> "
send "    <div className=\"min-h-screen bg-gradient-to-b from-green-900 to-blue-900 text-white\">\r"
expect "> "
send "      <header className=\"bg-black/20 p-4\">\r"
expect "> "
send "        <div className=\"max-w-6xl mx-auto flex justify-between items-center\">\r"
expect "> "
send "          <h1 className=\"text-2xl font-bold\">🎮 BettaDayz PBBG</h1>\r"
expect "> "
send "          <div className=\"flex items-center space-x-4\">\r"
expect "> "
send "            <span>Welcome, {player?.username \|\| user.email}</span>\r"
expect "> "
send "            <button\r"
expect "> "
send "              onClick={signOut}\r"
expect "> "
send "              className=\"bg-red-600 px-4 py-2 rounded hover:bg-red-700\"\r"
expect "> "
send "            >\r"
expect "> "
send "              Logout\r"
expect "> "
send "            </button>\r"
expect "> "
send "          </div>\r"
expect "> "
send "        </div>\r"
expect "> "
send "      </header>\r"
expect "> "
send "\r"
expect "> "
send "      <main className=\"max-w-6xl mx-auto p-6\">\r"
expect "> "
send "        {player && (\r"
expect "> "
send "          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-8\">\r"
expect "> "
send "            <div className=\"bg-black/30 rounded-lg p-6\">\r"
expect "> "
send "              <h2 className=\"text-xl font-bold mb-4\">Player Stats</h2>\r"
expect "> "
send "              <div className=\"space-y-2\">\r"
expect "> "
send "                <p>Level: {player.level}</p>\r"
expect "> "
send "                <p>Experience: {player.experience}</p>\r"
expect "> "
send "                <p>Coins: {player.coins.toLocaleString()}</p>\r"
expect "> "
send "                <p>Energy: {player.energy}/{player.max_energy}</p>\r"
expect "> "
send "                <p>Health: {player.health}/{player.max_health}</p>\r"
expect "> "
send "              </div>\r"
expect "> "
send "            </div>\r"
expect "> "
send "\r"
expect "> "
send "            <div className=\"bg-black/30 rounded-lg p-6\">\r"
expect "> "
send "              <h2 className=\"text-xl font-bold mb-4\">Game Info</h2>\r"
expect "> "
send "              <div className=\"space-y-2\">\r"
expect "> "
send "                <p>Domain: {process.env.GAME_DOMAIN \|\| 'shop'}</p>\r"
expect "> "
send "                <p>JWT Configured: ✅</p>\r"
expect "> "
send "                <p>Supabase: Connected</p>\r"
expect "> "
send "                <p>Real-time: Active</p>\r"
expect "> "
send "              </div>\r"
expect "> "
send "            </div>\r"
expect "> "
send "\r"
expect "> "
send "            <div className=\"bg-black/30 rounded-lg p-6\">\r"
expect "> "
send "              <h2 className=\"text-xl font-bold mb-4\">Quick Actions</h2>\r"
expect "> "
send "              <div className=\"space-y-2\">\r"
expect "> "
send "                <button\r"
expect "> "
send "                  onClick={() => logActivity('test_action', {}, 50, 100)}\r"
expect "> "
send "                  className=\"w-full bg-green-600 py-2 rounded hover:bg-green-700\"\r"
expect "> "
send "                >\r"
expect "> "
send "                  Test Action (+50 XP, +100 coins)\r"
expect "> "
send "                </button>\r"
expect "> "
send "              </div>\r"
expect "> "
send "            </div>\r"
expect "> "
send "          </div>\r"
expect "> "
send "        )}\r"
expect "> "
send "\r"
expect "> "
send "        <div className=\"bg-black/30 rounded-lg p-6\">\r"
expect "> "
send "          <h2 className=\"text-xl font-bold mb-4\">🚀 BettaDayz PBBG Integration Status</h2>\r"
expect "> "
send "          <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 text-sm\">\r"
expect "> "
send "            <div className=\"text-center\">\r"
expect "> "
send "              <div className=\"text-2xl mb-2\">✅</div>\r"
expect "> "
send "              <div>Next.js 16</div>\r"
expect "> "
send "            </div>\r"
expect "> "
send "            <div className=\"text-center\">\r"
expect "> "
send "              <div className=\"text-2xl mb-2\">✅</div>\r"
expect "> "
send "              <div>Supabase</div>\r"
expect "> "
send "            </div>\r"
expect "> "
send "            <div className=\"text-center\">\r"
expect "> "
send "              <div className=\"text-2xl mb-2\">✅</div>\r"
expect "> "
send "              <div>Authentication</div>\r"
expect "> "
send "            </div>\r"
expect "> "
send "            <div className=\"text-center\">\r"
expect "> "
send "              <div className=\"text-2xl mb-2\">🌐</div>\r"
expect "> "
send "              <div>Cloudflare Worker</div>\r"
expect "> "
send "            </div>\r"
expect "> "
send "          </div>\r"
expect "> "
send "        </div>\r"
expect "> "
send "      </main>\r"
expect "> "
send "    </div>\r"
expect "> "
send "  )\r"
expect "> "
send "}\r"
expect "> "
send "EOF\r"
expect "\$ "

# Restart applications to load new code
send "echo 'Restarting applications with Supabase integration...'\r"
expect "\$ "

send "kill \$(cat shop.pid store.pid 2>/dev/null) 2>/dev/null || echo 'No processes to kill'\r"
expect "\$ "

send "sleep 5\r"
expect "\$ "

send "./start-shop.sh\r"
expect "\$ "

send "./start-store.sh\r"
expect "\$ "

send "sleep 15\r"
expect "\$ "

# Test the new integration
send "echo '=== TESTING SUPABASE INTEGRATION ==='\r"
expect "\$ "

send "curl -s http://localhost:3000/game | head -20 || echo 'Game page test failed'\r"
expect "\$ "

send "echo '=== APPLICATION STATUS ==='\r"
expect "\$ "

send "tail -n 3 logs/shop.log\r"
expect "\$ "

send "tail -n 3 logs/store.log\r"
expect "\$ "

puts ""
puts "🎯 SUPABASE INTEGRATION DEPLOYMENT COMPLETE!"
puts "============================================="
puts "✅ Supabase Client: Deployed to lib/supabase.ts"
puts "✅ Player Hooks: Deployed to hooks/usePlayer.ts"
puts "✅ Game Page: Created with Supabase integration"
puts "✅ Applications: Restarted with new code"
puts "🔐 JWT Secret: 9=N6H//qQ\]?g+BDV"
puts "📊 Database: Ready for schema creation"
puts "🎮 Test URL: http://194.195.84.72:3000/game"
puts "============================================="

send "exit\r"
expect eof