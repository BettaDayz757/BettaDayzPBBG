name: Deploy to Production

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy-cloudflare:
    runs-on: ubuntu-latest
    name: Deploy to Cloudflare Pages
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install Dependencies
        run: npm ci

      - name: Build
        run: npm run build
        env:
          NEXT_PUBLIC_DOMAIN: bettadayz.shop
          NODE_ENV: production
          NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
          NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}

      - name: Deploy to Cloudflare Pages
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: pages deploy .next --project-name=bettadayzpbbg

  deploy-vercel:
    runs-on: ubuntu-latest
    name: Deploy to Vercel
    strategy:
      matrix:
        include:
          - project: 'bestdayz'
            project_id_secret: 'VERCEL_PROJECT_ID_BESTDAYZ'
          - project: 'bestdayz1'
            project_id_secret: 'VERCEL_PROJECT_ID_BESTDAYZ1'
          - project: 'bettaday'
            project_id_secret: 'VERCEL_PROJECT_ID_BETTADAY'
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install Dependencies
        run: npm ci

      - name: Build
        run: npm run build
        env:
          NEXT_PUBLIC_DOMAIN: bettadayz.shop
          NODE_ENV: production
          NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
          NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}

      - name: Deploy to Vercel (${{ matrix.project }})
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets[matrix.project_id_secret] }}
          vercel-args: '--prod'

      - name: Notify Vercel Status
        if: always()
        run: |
          echo "Deployment status for ${{ matrix.project }}: ${{ steps.deploy.outcome }}"
          echo "Project deployed successfully to Vercel"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  notify-completion:
    runs-on: ubuntu-latest
    needs: [deploy-cloudflare, deploy-vercel]
    if: always()
    steps:
      - name: Deployment Status Notification
        run: |
          echo "ðŸš€ Deployment Summary:"
          echo "Cloudflare Pages: ${{ needs.deploy-cloudflare.result }}"
          echo "Vercel Deployments: ${{ needs.deploy-vercel.result }}"