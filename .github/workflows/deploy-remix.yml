name: Deploy Remix App (Cloudflare Pages)

on:
  push:
    branches: [ main ]
  workflow_dispatch: {}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        # You can change to npm ci when lockfile is stable in the repo
        run: npm install --legacy-peer-deps

      - name: Build
        run: npm run build

      - name: Deploy to Cloudflare Pages (requires secrets)
        env:
          CF_API_TOKEN: ${{ secrets.CF_API_TOKEN }}
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CF_ACCOUNT_ID: ${{ secrets.CF_ACCOUNT_ID }}
          CF_PAGES_PROJECT: ${{ secrets.CF_PAGES_PROJECT }}
        run: |
          # This step requires that you set CF_API_TOKEN (or CLOUDFLARE_API_TOKEN), CF_ACCOUNT_ID and CF_PAGES_PROJECT in repo secrets.
          # Wrangler expects CLOUDFLARE_API_TOKEN in a non-interactive environment. If only CF_API_TOKEN is set, copy it over.
          if [ -z "$CLOUDFLARE_API_TOKEN" ] && [ -n "$CF_API_TOKEN" ]; then
            echo "CLOUDFLARE_API_TOKEN not set, copying from CF_API_TOKEN"
            export CLOUDFLARE_API_TOKEN="$CF_API_TOKEN"
          fi
          # Adjust the wrangler command to your needs. Example using wrangler CLI.
          # Prefer passing the token explicitly via --api-token to avoid wrangler's interactive check.
          TOKEN="$CLOUDFLARE_API_TOKEN"
          if [ -z "$TOKEN" ] && [ -n "$CF_API_TOKEN" ]; then
            TOKEN="$CF_API_TOKEN"
          fi
          if [ -z "$TOKEN" ]; then
            echo "ERROR: No Cloudflare API token found. Set CF_API_TOKEN or CLOUDFLARE_API_TOKEN in repo secrets."
            exit 1
          fi
          npx wrangler pages deploy ./build/client --project-name "$CF_PAGES_PROJECT" --branch main --api-token "$TOKEN"

# NOTE: This workflow is a template. Add required Cloudflare secrets and verify the wrangler CLI args match your Cloudflare Pages setup.
